{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass DocumentationParamsDirective {\n  constructor(templateRef, viewContainer, elementRef, renderer) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.hasView = false;\n  }\n  set params(value) {\n    if (value && value.length > 0) {\n      if (!this.hasView) {\n        const container = this.viewContainer.createEmbeddedView(this.templateRef);\n        value.forEach(param => {\n          if (param.isActive) {\n            const p = document.createElement('p');\n            p.textContent = param.description || '';\n            p.style.color = param.color || 'black';\n            p.style.backgroundColor = param.backgroundColor || 'transparent';\n            p.style.fontSize = param.fontSize || 'inherit';\n            const content = container.rootNodes[0].innerHTML;\n            container.rootNodes[0].innerHTML = `${p.outerHTML}<div>${content}</div>`;\n          }\n        });\n        const directiveDiv = document.createElement('small');\n        directiveDiv.textContent = '';\n        container.rootNodes[0].parentNode.insertBefore(directiveDiv, container.rootNodes[0]);\n        this.hasView = true;\n      }\n    } else {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n  static #_ = this.ɵfac = function DocumentationParamsDirective_Factory(t) {\n    return new (t || DocumentationParamsDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DocumentationParamsDirective,\n    selectors: [[\"\", \"appDocParams\", \"\"]],\n    inputs: {\n      params: [\"appDocParams\", \"params\"]\n    }\n  });\n}\nexport { DocumentationParamsDirective };","map":{"version":3,"names":["DocumentationParamsDirective","constructor","templateRef","viewContainer","elementRef","renderer","hasView","params","value","length","container","createEmbeddedView","forEach","param","isActive","p","document","createElement","textContent","description","style","color","backgroundColor","fontSize","content","rootNodes","innerHTML","outerHTML","directiveDiv","parentNode","insertBefore","clear","_","i0","ɵɵdirectiveInject","TemplateRef","ViewContainerRef","ElementRef","Renderer2","_2","selectors","inputs"],"sources":["/Users/oguzhancart/Desktop/html-docs-app/projects/html-docs/src/lib/directive/document-tag.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, ElementRef, Renderer2 } from '@angular/core';\nimport { DocumentationParam } from '../models/document-param.model';\n\n@Directive({\n  selector: '[appDocParams]'\n})\nexport class DocumentationParamsDirective {\n  private hasView = false;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private elementRef: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  @Input('appDocParams') set params(value: DocumentationParam[]) {\n    if (value && value.length > 0) {\n      if (!this.hasView) {\n        const container = this.viewContainer.createEmbeddedView(this.templateRef);\n        value.forEach(param => {\n          if (param.isActive) {\n            const p = document.createElement('p');\n            p.textContent = param.description || '';\n            p.style.color = param.color || 'black';\n            p.style.backgroundColor = param.backgroundColor || 'transparent';\n            p.style.fontSize = param.fontSize || 'inherit';\n            const content = container.rootNodes[0].innerHTML;\n            container.rootNodes[0].innerHTML = `${p.outerHTML}<div>${content}</div>`;\n          }\n        });\n        const directiveDiv = document.createElement('small');\n        directiveDiv.textContent = '';\n        container.rootNodes[0].parentNode.insertBefore(directiveDiv, container.rootNodes[0]);\n        this.hasView = true;\n      }\n    } else {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n"],"mappings":";AAGA,MAGaA,4BAA4B;EAGvCC,YACUC,WAA6B,EAC7BC,aAA+B,EAC/BC,UAAsB,EACtBC,QAAmB;IAHnB,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,QAAQ,GAARA,QAAQ;IANV,KAAAC,OAAO,GAAG,KAAK;EAOpB;EAEH,IAA2BC,MAAMA,CAACC,KAA2B;IAC3D,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE;QACjB,MAAMI,SAAS,GAAG,IAAI,CAACP,aAAa,CAACQ,kBAAkB,CAAC,IAAI,CAACT,WAAW,CAAC;QACzEM,KAAK,CAACI,OAAO,CAACC,KAAK,IAAG;UACpB,IAAIA,KAAK,CAACC,QAAQ,EAAE;YAClB,MAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;YACrCF,CAAC,CAACG,WAAW,GAAGL,KAAK,CAACM,WAAW,IAAI,EAAE;YACvCJ,CAAC,CAACK,KAAK,CAACC,KAAK,GAAGR,KAAK,CAACQ,KAAK,IAAI,OAAO;YACtCN,CAAC,CAACK,KAAK,CAACE,eAAe,GAAGT,KAAK,CAACS,eAAe,IAAI,aAAa;YAChEP,CAAC,CAACK,KAAK,CAACG,QAAQ,GAAGV,KAAK,CAACU,QAAQ,IAAI,SAAS;YAC9C,MAAMC,OAAO,GAAGd,SAAS,CAACe,SAAS,CAAC,CAAC,CAAC,CAACC,SAAS;YAChDhB,SAAS,CAACe,SAAS,CAAC,CAAC,CAAC,CAACC,SAAS,GAAG,GAAGX,CAAC,CAACY,SAAS,QAAQH,OAAO,QAAQ;;QAE5E,CAAC,CAAC;QACF,MAAMI,YAAY,GAAGZ,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;QACpDW,YAAY,CAACV,WAAW,GAAG,EAAE;QAC7BR,SAAS,CAACe,SAAS,CAAC,CAAC,CAAC,CAACI,UAAU,CAACC,YAAY,CAACF,YAAY,EAAElB,SAAS,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAACnB,OAAO,GAAG,IAAI;;KAEtB,MAAM;MACL,IAAI,CAACH,aAAa,CAAC4B,KAAK,EAAE;MAC1B,IAAI,CAACzB,OAAO,GAAG,KAAK;;EAExB;EAAC,QAAA0B,CAAA,G;qBAlCUhC,4BAA4B,EAAAiC,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,WAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAI,UAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAK,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA5BvC,4BAA4B;IAAAwC,SAAA;IAAAC,MAAA;MAAAlC,MAAA;IAAA;EAAA;;SAA5BP,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}