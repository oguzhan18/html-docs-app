{"ast":null,"code":"import { DocumentationComponent } from '../components/documentation/documentation.component';\nimport * as i0 from \"@angular/core\";\nclass DocumentationParamsDirective {\n  constructor(templateRef, viewContainer, componentFactoryResolver) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.hasView = false;\n  }\n  set params(value) {\n    if (value && value.length > 0) {\n      if (!this.hasView) {\n        const container = this.viewContainer.createEmbeddedView(this.templateRef);\n        value.forEach(param => {\n          if (param.isActive) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(DocumentationComponent);\n            this.componentRef = this.viewContainer.createComponent(factory);\n            this.componentRef.instance.param = param;\n            this.viewContainer.element.nativeElement.appendChild(this.componentRef.location.nativeElement);\n          }\n        });\n        this.hasView = true;\n      }\n    } else {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n  static #_ = this.ɵfac = function DocumentationParamsDirective_Factory(t) {\n    return new (t || DocumentationParamsDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DocumentationParamsDirective,\n    selectors: [[\"\", \"appDocParams\", \"\"]],\n    inputs: {\n      params: [\"appDocParams\", \"params\"]\n    }\n  });\n}\nexport { DocumentationParamsDirective };","map":{"version":3,"names":["DocumentationComponent","DocumentationParamsDirective","constructor","templateRef","viewContainer","componentFactoryResolver","hasView","params","value","length","container","createEmbeddedView","forEach","param","isActive","factory","resolveComponentFactory","componentRef","createComponent","instance","element","nativeElement","appendChild","location","clear","_","i0","ɵɵdirectiveInject","TemplateRef","ViewContainerRef","ComponentFactoryResolver","_2","selectors","inputs"],"sources":["/Users/oguzhancart/Desktop/html-docs-app/projects/html-docs/src/lib/directive/document-tag.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { DocumentationParam } from '../models/document-param.model';\nimport { DocumentationComponent } from '../components/documentation/documentation.component';\n\n@Directive({\n  selector: '[appDocParams]'\n})\nexport class DocumentationParamsDirective {\n  private hasView = false;\n  private componentRef?: ComponentRef<DocumentationComponent>;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  @Input('appDocParams') set params(value: DocumentationParam[]) {\n    if (value && value.length > 0) {\n      if (!this.hasView) {\n        const container = this.viewContainer.createEmbeddedView(this.templateRef);\n        value.forEach(param => {\n          if (param.isActive) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(DocumentationComponent);\n            this.componentRef = this.viewContainer.createComponent(factory);\n            this.componentRef.instance.param = param;\n            this.viewContainer.element.nativeElement.appendChild(this.componentRef.location.nativeElement);\n          }\n        });\n        this.hasView = true;\n      }\n    } else {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,sBAAsB,QAAQ,qDAAqD;;AAE5F,MAGaC,4BAA4B;EAIvCC,YACUC,WAA6B,EAC7BC,aAA+B,EAC/BC,wBAAkD;IAFlD,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,wBAAwB,GAAxBA,wBAAwB;IAN1B,KAAAC,OAAO,GAAG,KAAK;EAOpB;EAEH,IAA2BC,MAAMA,CAACC,KAA2B;IAC3D,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE;QACjB,MAAMI,SAAS,GAAG,IAAI,CAACN,aAAa,CAACO,kBAAkB,CAAC,IAAI,CAACR,WAAW,CAAC;QACzEK,KAAK,CAACI,OAAO,CAACC,KAAK,IAAG;UACpB,IAAIA,KAAK,CAACC,QAAQ,EAAE;YAClB,MAAMC,OAAO,GAAG,IAAI,CAACV,wBAAwB,CAACW,uBAAuB,CAAChB,sBAAsB,CAAC;YAC7F,IAAI,CAACiB,YAAY,GAAG,IAAI,CAACb,aAAa,CAACc,eAAe,CAACH,OAAO,CAAC;YAC/D,IAAI,CAACE,YAAY,CAACE,QAAQ,CAACN,KAAK,GAAGA,KAAK;YACxC,IAAI,CAACT,aAAa,CAACgB,OAAO,CAACC,aAAa,CAACC,WAAW,CAAC,IAAI,CAACL,YAAY,CAACM,QAAQ,CAACF,aAAa,CAAC;;QAElG,CAAC,CAAC;QACF,IAAI,CAACf,OAAO,GAAG,IAAI;;KAEtB,MAAM;MACL,IAAI,CAACF,aAAa,CAACoB,KAAK,EAAE;MAC1B,IAAI,CAAClB,OAAO,GAAG,KAAK;;EAExB;EAAC,QAAAmB,CAAA,G;qBA5BUxB,4BAA4B,EAAAyB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,WAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAI,wBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA5B9B,4BAA4B;IAAA+B,SAAA;IAAAC,MAAA;MAAA1B,MAAA;IAAA;EAAA;;SAA5BN,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}